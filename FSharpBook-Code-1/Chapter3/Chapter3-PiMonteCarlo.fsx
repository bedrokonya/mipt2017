// =============================================================
// Дмитрий Сошников: Функциональное программирования на языке F#
//                               http://www.soshnikov.com/fsharp
// -------------------------------------------------------------
// Глава 3: Приёмы функционального программирования
// Вычисление числа Pi методом Монте-Карло
// =============================================================
open Microsoft.FSharp

// Бесконечная случайная ленивая последовательность (seq) псевдослучайных чисел
// n - это начальное значение для генератора псевдослучайных чисел ("зерно")
let rand max n = 
   seq {
     let r = new System.Random(n)
     while true do yield r.NextDouble()*max
   }

// Вычисляем площадь фигуры, ограниченной функцией принадлежности hit
let MonteCarlo hit R N =
  let hits = (float)(
      Seq.zip (rand R 134) (rand R 313) |> // составляем послед.пар
      Seq.take N |>                        // берём первые N элементов
      Seq.filter hit |> // оставляем только попавшие в фигуру точки
      Seq.length) in    // считаем их количество
  hits/((float)N)

// Площадь круга радиуса radius
let area radius =
 MonteCarlo
  (fun (x,y) -> x*x+y*y<=radius*radius)
  radius 100000;;

// Вычисляем площадь четверть-круга
area 100.0;;

// Более короткая запись- сразу получаем число Pi
let pi' = 4.0*MonteCarlo (fun (x,y) -> x*x+y*y<=1.0) 1.0 10000
